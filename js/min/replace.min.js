$(function(){var e={"プログラムでルーター機能を作る":"プログラムで作るのは当たり前だと思われるかもしれないが、実は違う。現代のルーターはナノセカンド単位での処理を求められるため、例えばTCAMと呼ばれる機能は何とハードウェアによって実現されている。このようなハードウェアの設計には多大な時間がかかるため、従来ルーターでの実験サイクルは遅くなりがちだった。","静的ライブラリ":" .o を一まとめにしたファイル。libclick.aなど。Clickでは気にしなくて良い用語。","--enable-local":"このドキュメントを読んでいないと数時間を費やすことになる邪悪なフラグ。",UUID:"universally unique identifier。識別子の一種。UUIDに限らず、VirtualBoxでは仮想マシンのMACアドレスだったりIPアドレスだったり「一意なことが前提とされている識別子」が２つ以上存在すると、見つけにくいバグが見つけにくいタイミングで起きるので早急に変えておきたい。","Save the machine state":"これにしておくと仮想マシンをすぐに再開できる。","Hello World":"プログラミング言語の実行環境がだいたい整ったことを確認するためのプログラム。Clickは .clickファイルがソースコードに当たるため、これが1つでも実行できれば確認完了となる。","eth0に届いたパケット":"「eth0から出て行くパケット」を見るためには別の設定が必要なので注意。なおeth0はネットワーク・インターフェイスに付けられた識別子を指す。","Clickが公式に用意した説明":"この説明の正体は/usr/local/share/man/man7/Print.7click.gz というファイルである。sudo make installしたときにこっそりインストールされている。本当にあるか確認したいのであればlocate clickとしてみるとよい。 ",Wireshark:"パケットを解析するプログラム(Packet analyzer)。ネットワークのバグは制御端末に現われず、パケットの中に現れていることが多いためにバグの特定に役立つ。非常に見やすいGUIを採用しているため、プロトコルを単体で勉強する際にも役立つ。","仮想マシン":"CPUの動きまで全てプログラムで再現したコンピュータのこと。ネットワークの実験などあらゆる作業を飛躍的に簡単にしたイノベーティブな技術。仮想マシンを管理するソフトウェアの1つがVirtualBoxである。",Clickのバイナリがインストールされた:"この文書内では「インストール」とは「パスが通っている場所にファイルを移動する」ことを指す。端末でecho $PATH と入力すれば、/usr/local/binが含まれていることが確認できる。万が一含まれていなかったときは追加する。",Clickによるソフトウェアルータ:"正体は,大量の設定項目(Configuration String)が渡されたClickバイナリ内の_main関数のはず。","訳さずにelementのまま理解したほうが良い":"「オブジェクト志向」を「物体志向」と訳さないのと同じ理由である。日本語の「要素」にはない細かな設計が含まれている。",agnostic:"一般的な訳語は「不可知論者」。",git:"バージョン管理プログラムだが、clickを使うときは単にインターネットからダウンロードするコマンド(git clone)としてしか使わない。",ディストリビューション:"Linuxを頒布するときの.isoファイルのこと。ubuntu-14.04-desktop-amd64.isoなど。バージョンや対応するCPU、予めインストールされたプログラムなどが異なる。",ヘッダファイル:"#include <click/args.h>などとして取り込まれるファイル。例えばclick/args.hであれば実際には/usr/local/include/click/args.hを指す。",make:"コンパイルを半自動化するプログラム。何が実行されるかはMakefileというファイルの中に書いてある。慣習として、sudo make installはコンパイルではなくインストールを行なうコマンドであることが多い。","Unix系OS":"LinuxやAndroidなど。Mac OS Xでも雰囲気は味わえる。",ドキュメント:"Clickのような数万行を超える(=全部は読めない)大規模ソフトウェアで「ドキュメント」と言った場合、それは「ないと地獄を味わうことになるもの」程度の示唆が含まれている。",カレントディレクトリ:'現在居るディレクトリ(フォルダと同義)を指す。コマンド上の表記としては . を用いる。ソースコードの中に#include "./myheader.h" と書いた場合、「このソースコードがあるディレクトリのmyheader.hというファイル」を意味する。',カーネルスペース:"OSが使用しているメモリー空間。カーネル空間とも。",GCC:"GNU Compiler Collection (GCC)。この中の一つであるC++言語のコンパイラ「g++」がClickには必要。",clang:"クラン。Googleとかも出資している新しいコンパイラ。GCC後継になることを目的としている。"},a=new Array,i=0;for(key in e)a[i]=key,i++;$.each(a,function(a,i){$.each($("#right_frame p, #right_frame li"),function(l,c){if($(c).hasClass("no_replace_please"))return console.log("continue"),!0;var t=new RegExp(i);if(c.innerText.match(t)){var n=new RegExp(".*?"+i+"(.{2})"),r=(new RegExp(i+"(.*)"),$(c).text().match(n)[1]);console.log("text "+$(c).text()),console.log("signature "+$(c).text().match(n)[1]);var o=new RegExp("(.*?)"+i+r),s=new RegExp(i+r+"(.*)");if(null==$(c).html().match(o)){console.log("no prefix");var h=""}else var h=$(c).html().match(o)[1];var f=r+$(c).html().match(s)[1];console.log("prefix "+h);var m=a+"d"+l;$(this).html(h+'<span id="dict-entry-'+m+'" class="dictionary_entry" data-entryname="'+i+'">'+i+'<div id="dict-'+m+'"  class="dict_content">'+e[i]+"</div></span>"+f),console.log("modified result: "+$(this).html())}})}),$.each(a,function(e){$.each($("#right_frame p, #right_frame li"),function(a){var i=e+"d"+a;$($("#dict-entry-"+i)).hover(function(){$("#dict-"+i).toggleClass("dict_visible")})})});var l=$("#right_frame a");$.each(l,function(e,a){a.href.match(/\.pdf/)?$(l[e]).before(' <i class="fa fa-file-pdf-o facolor"></i> '):$(l[e]).before(' <i class="fa fa-share-square-o facolor"></i> ')}),$("#right_frame a").after(" ");var l=$("#right_frame a");$.each(l,function(e,a){if(a.className.match(/replace_me/)){var i=a.href.match(/#.*/);$(l[e]).text($(i[0]).text())}})});